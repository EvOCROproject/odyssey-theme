---
import Layout from '../../layouts/Page.astro';

const posts = (await Astro.glob('./posts/*.mdx'))
  .map((p) => {
    const fm = p.frontmatter ?? {};
    const date = fm.publishDate ? new Date(fm.publishDate) : null;
    return {
      url: p.url,
      title: fm.title ?? 'Untitled',
      description: fm.description ?? '',
      excerpt: fm.excerpt ?? '',
      pubDate: date,
      image: fm.featuredImage ?? null,
      tags: fm.tags ?? [],
    };
  })
  .sort((a, b) => (b.pubDate?.getTime() ?? 0) - (a.pubDate?.getTime() ?? 0));
---

<Layout title="News" description="Updates, events, and field notes">
  <section class="blog-hero">
    <h1>News</h1>
    <p>Updates, events, and field notes from the EvOCRO project.</p>
  </section>

  <section class="posts-grid">
    {posts.length === 0 && <p>No posts yet.</p>}

    <ul class="grid">
      {posts.map((post) => (
        <li class="card">
          <a href={post.url} class="card-link">
            {post.image && (
              <div class="thumb">
                <img src={post.image} alt={post.title} loading="lazy" />
              </div>
            )}
            <div class="meta">
              {post.pubDate && (
                <time datetime={post.pubDate.toISOString()}>
                  {post.pubDate.toLocaleDateString('en-GB', { year: 'numeric', month: 'short', day: '2-digit' })}
                </time>
              )}
              {post.tags?.length > 0 && (
                <ul class="tags">
                  {post.tags.map((t) => <li>{t}</li>)}
                </ul>
              )}
            </div>
            <h3 class="title">{post.title}</h3>
            {(post.excerpt || post.description) && (
              <p class="desc">{post.excerpt || post.description}</p>
            )}
          </a>
        </li>
      ))}
    </ul>
  </section>
</Layout>

<style>
  .blog-hero { margin: var(--section-margin) auto; max-width: 56rem; }
  .posts-grid { margin: var(--section-margin) auto; }
  .grid {
    list-style: none; margin: 0; padding: 0;
    display: grid; gap: var(--theme-grid-gap);
    grid-template-columns: repeat(3, minmax(0,1fr));
  }
  @media (max-width: 1024px) { .grid { grid-template-columns: repeat(2,1fr); } }
  @media (max-width: 640px)  { .grid { grid-template-columns: 1fr; } }
  .card { background: var(--theme-surface-1); border-radius: var(--theme-shape-radius); overflow: hidden; }
  .card-link { display: block; color: inherit; text-decoration: none; height: 100%; }
  .thumb { aspect-ratio: 16/9; overflow: hidden; }
  .thumb img { width: 100%; height: 100%; object-fit: cover; display: block; }
  .meta { display: flex; align-items: center; gap: .75rem; padding: .75rem 1rem 0; }
  .meta time { font-size: .85rem; color: var(--theme-on-surface-2); }
  .tags { display: flex; gap: .5rem; list-style: none; margin: 0; padding: 0; }
  .tags li { font-size: .75rem; padding: .15rem .5rem; border-radius: 999px; background: var(--theme-surface-2); color: var(--theme-on-surface-1); }
  .title { padding: .25rem 1rem 0; margin: 0; }
  .desc { padding: .5rem 1rem 1rem; margin: 0; color: var(--theme-on-surface-2); }
</style>
