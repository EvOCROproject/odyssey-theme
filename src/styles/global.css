/* ===== Base ===== */
*, *::before, *::after {
  box-sizing: border-box;
}

html, body {
  height: 100%;
}

body {
  margin: 0;                          /* niente max-width sul body */
  background-color: var(--theme-bg);
  color: var(--theme-on-bg);
  position: relative;
}

/* ===== Container globale del tema =====
   Odyssey usa .content__container come wrapper principale.
   Qui gli diamo larghezza max e padding laterale. */
.content__container {
  max-width: var(--container-max-width, 1200px);
  padding: var(--container-padding, 0 1rem);
  margin-left: auto;
  margin-right: auto;
}

/* ===== Header: compattiamo un po’ lo spazio verticale ===== */
header {
  padding-block: 0.5rem;              /* riduce la distanza header/contenuti */
}

/* ===== Home: più respiro ai lati delle sezioni con card ===== */
.feature-card__section {
  margin: var(--section-margin, 3rem) auto;
  padding-inline: clamp(1rem, 4vw, 2rem);
}

/* Mobile: un filo di padding interno alla griglia per evitare “a filo” */
@media (max-width: 768px) {
  .feature-card__grid {
    padding-inline: 0.25rem;
  }
}

/* ===== Code blocks (tuo codice esistente) ===== */
pre {
  padding: 1em;
  border-radius: 0.5em;
  overflow: auto;
}

pre .language-id {
  display: none;
}
:root {
  /* fallback se non definiti altrove */
  --container-max-width: 1200px;
  --container-padding: 0 clamp(1rem, 4vw, 2rem);
}

/* Constrain & pad tutti i primi-level children di #page che NON sono già container */
#page > *:not(.content__container):not(header):not(footer) {
  max-width: var(--container-max-width);
  margin-left: auto;
  margin-right: auto;
  padding: var(--container-padding);
}

/* Se qualche sezione deve essere full-bleed, aggiungi la classe .full-bleed a quell’elemento */
.full-bleed {
  max-width: none !important;
  padding: 0 !important;
  margin-left: 0 !important;
  margin-right: 0 !important;
}
